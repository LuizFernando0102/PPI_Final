<%- include('../layout') -%>
<div class="container mt-4">
<form action="/pacientes/add" method="post">
  <div class="mb-3">
    <label for="cpf" class="form-label">CPF:</label>
    <input type="text" id="cpf" name="cpf" class="form-control" required onkeyup="verificarCPF(this.value)">
    <div id="message" class="alert alert-danger mt-2" style="display:none;"></div>
  </div>
  <div class="mb-3">
    <label for="nome_completo" class="form-label">Nome:</label>
    <input type="text" id="nome_completo" name="nome_completo" class="form-control" required>
  </div>
  <div class="mb-3">
    <label for="idade" class="form-label">Idade:</label>
    <input type="number" id="idade" name="idade" class="form-control" required>
  </div>
  <div class="mb-3">
    <label for="dia_consulta" class="form-label">Dia da consulta:</label>
    <input type="date" id="dia_consulta" name="dia_consulta" class="form-control">
  </div>
  <div class="mb-3">
    <label for="hora_consulta" class="form-label">Hora da consulta:</label>
    <input type="time" id="hora_consulta" name="hora_consulta" class="form-control">
  </div>
  <button type="submit" class="btn btn-primary" id="button">Submit</button>
</form>
</div>

<script>
  function sanitizeInput(input) {
      return input.replace(/[^\d]/g, ''); // Mantém apenas os dígitos numéricos
  }

  function mostrarMensagem(msg) {
      const messageElement = document.getElementById('message');
      messageElement.textContent = msg;
      messageElement.style.display = msg ? 'block' : 'none';
      document.getElementById('button').disabled = (msg !== '');
  }

  // Função para validar um CPF
  function verificarCPF(cpf) {
      // Sanitiza o CPF de entrada
      cpf = sanitizeInput(cpf);

      // Verifica se o CPF possui exatamente 11 dígitos após a sanitização
      if (cpf.length !== 11) {
          mostrarMensagem('CPF Inválido');
          return false;
      }

      // Lista de CPFs inválidos conhecidos
      const invalidCPFs = [
          "00000000000", "11111111111", "22222222222", "33333333333", "44444444444",
          "55555555555", "66666666666", "77777777777", "88888888888", "99999999999"
      ];

      // Verifica se o CPF está na lista de CPFs inválidos
      if (invalidCPFs.includes(cpf)) {
          mostrarMensagem('CPF Inválido');
          return false;
      }

      // Função para calcular um dígito verificador
      function calculateDigit(sumFunction) {
          let sum = sumFunction();
          let rev = 11 - (sum % 11);
          return (rev === 10 || rev === 11) ? 0 : rev;
      }

      // Função para calcular a soma dos dígitos multiplicados pelos pesos
      function calculateSum(multiplier) {
          let sum = 0;
          for (let i = 0; i < multiplier; i++) {
              sum += parseInt(cpf.charAt(i)) * (multiplier + 1 - i);
          }
          return sum;
      }

      try {
          // Calcula os dígitos verificadores
          const j = calculateDigit(() => calculateSum(9));
          const k = calculateDigit(() => calculateSum(10));

          // Verifica se os dígitos verificadores estão corretos
          if (j !== parseInt(cpf.charAt(9)) || k !== parseInt(cpf.charAt(10))) {
              mostrarMensagem('CPF Inválido');
              return false;
          }
      } catch (error) {
          mostrarMensagem('Erro ao validar CPF');
          return false;
      }

      mostrarMensagem('');
      return true;
  }
</script>
